-Konversi String dan Number
Saat membuat aplikasi,kadang kita input dari pengguna selalu dalam bentuk String
Sedangkan kita ingi mengelola datanya dalam bentuk Number
Maka sangat di sarankan untuk melakukan konversi tipe data

Function              -    Keterangan
parsenInt(string)          Mengkonversi dari string ke number(Bilangan Bulat)
parseFloat(string)         Mengkonversi dari sting ke number(Bilangan pecahan)
Number(string)             Mongkonversi dari sting ke number(Bilangan bulat maupun pecahan)
number.toString()          Mongkonversi dari number ke string

-NaN
bagaiman jika ternyata data string yang kita coba konversi ke number bukanlah data yang valid
Jika data string yang kita coba lakukan konversi bukanlah data valid,mak hasil dari konversi tersebut adalah Nan(Not a Number)
NaN adalah number spesial yang menyebutkan bahwa ini bukan number
Jika NaN dioperasikan dengan data number lainnya,maka hasilnya menjadi NaN lagi

-Tipe Data Array
Array adalah tipe data yang berisikan kumpulan data
Array di javascript memiliki sifat dinamis, artinya datanya bisa bertambah dengan sendiri saat kita memasukan data ke dalam Array

-Cara kerja Array
Setiap data di array akan disimpan dalam posisi berurutan,dimana urutan pertama dimulai dari nomor 0
Setiap kita menambahkan data ke Array,otomatis data akan disimpan di urutan terahkir
Urutan di Array kita sebut dengan index

-Cara Menambahkan Array
Menggunakan push
contoh : Varible.push("Sabda");

-Operasi di Array
Operasi              -     Keterangan
array.push(value)          Menambahkan data di array
array.length               Untuk mendapatkan panjang Array
array[index]               Mendapatkan data di posisi index
array[index]=value         Mengubah data di posisi index
delete array[index]        Menghapus data 

-Tipe Data Object

-Associative Array
Di bahasa pemrograman lain seperti PHP,kita bisa menggunakan index berupa tipe data lain selain number,misal String
Fitur ini biasanya disebut associative array atau hash
Di JavaScript associative arraytidak didukung
Jika kita memaksa memasukkan data bukan number di indexArray,maka JavaScript akan merubah tipe data Array tersebut menjadi object,dan ini bisa berbahaya,karena beberapa operasi di array mungkin bisa berubah hasilnya

-Tipe Data Object
tipe data object adalah tipe data yang mirip dengan tipe data Array
Yang membedakan adalah index pada tipe data object bisa menggunakan string
index di object biasanya disebut attributes atau properties,bukan index
contoh: 
const property = {};

        //Menambahkan & Mengubah Isi Object
        property["nama"] = "Sabda Setiawan";
        property["umur"] = 12;
        property["alamat"] = "Jl.Sepakat";
        
        console.table(property);
        
        //Menghapus Object
        delete property["umur"];
        console.table(property);

        const mhs = {
        nama : "Sabda Setiawan",
        npm  : "193510101",
        kelas : "5B",
        umur : 21
        };
        console.table(mhs);

        //Mencari Informasi Di Object
        docuentm.writeln(`Nama : ${mhs.nama}`);
 
 -If Expression
 Dalam JavaScript,if adalah salah satu kata kunci yang digunakan untuk percabangan
 percabangan artinya kita bisa mengekseskus kode program tertentu ketika suatu kondisi terpenuhi
 Hampir di semua bahasa pemrograman mendukung if Expression

 -Popup
 Alert,Prompt dan Confirm
 JavaScript memiliki Fitur yang bernama alert,prompt dan Confirm
 Alert digunakan untuk memberikan peringatan berupa popup text di browser
 Prompt digunakan untuk meminta input string dari pengguna browser dalam bentuk popup input text
 sedangkan confirm digunakan untuk meminta input boolean dari pengguna browser dalam bentuk popup input pilihan

 -Undefined
 Undefined adalah sebua kata kunci di javascript
 Undefined adalah sebuah tipe data
 Sebua Variable yang belum di tambahkan nilai,maka artinya varible tersebut merupakan tipe Undefined
 Kadang untuk programmer javascript pemula Undefined ini memang agak sedikit membingungkan
 Undefined itu berbeda dengan null di bahasa pemrogram lain

 -null
 null merupakan representasi dari data kosong
 null berbeda dengan undefined,null berati variable sudah ditambahkan valuenya,hanya saja value nya null
 Sedangkan undefined adalah variable yang belum di tambahkan value apapun

 -Switch Expression
 Kadang kita hanya butuh menggunakan kondisi sederhana di if statement, seperti hanya menggunakan perbandingan ==
 Switch adalah statemnet percabangan yang sama dengan if,namun lebih sederhana cara pembuatannya
 kondisi di switch statement hanya untuk perbandingan
  
 -Operator typeof
 typeof merupakan operator yang bisa kita gunakan untuk melihat tipe data sebua value atau variable
 Karena Javascript merupakan dynamic language,jadi kadang kita perlu mengecek tipe data sebua value atau varible menggunakan operator typeof
 hasil dari operator typeof adalah string tipe datanya

 -Operator In
 In operator adalah operator yang bisa dilakukan untuk mengecek apakah sebuah property ada di dalam object atau tidak
 Jika property tersebut ada di object, maka hasilnya true, sedangkan jika tidak, maka hasilnya false
 Tidak hanya di object,in juga bisa digunakan untuk mengecek index di Array
 Jika nilai Undefined atau Null Tetap akan bernilai true karena dia hanya mengecek property/index bukan value

 -Operator Ternary
 Ternary operator adalah operator sederhana dari if statemen
 Ternary operator terdiri dari kondisi yang dievaluasi,Jika menghasilkan true makan nilai pertama diambil,jika false,maka nilai kedua diambil
 
 -Nullish Coalescing Operator
 Nullish value adalah null dan undefined
 Null coalescing operator (??) mirip dengan ternary operator, yang membedakan adalah pada konidis,jika bernilai null dan undefined,baru value default nya diambil

 -Optional Chaining
 Optional Chaining Operator (?) merupakan operator yang digunakan untuk mengamankan ketika kita ingin mengakses property sebuah object dari data nullish
 Jika kita mencoba mengakses property dari sebua object dari data nullish tanpa menggunakan optional chaining operator,maka akan terjadi error

 -Falsy
 Falsy atau kadang ditulis falsey.adalah value yang ketika dalam konteks boolean, dia dianggap false
 Ini adalah salah satu fitur unik dari JavaScript, yang berguna,namun kadang juga sering membingungkan
 Jadi di javascript,kondisi itu tidak hanya bisa boolean,tapi diluar booleab pun bisa,namun kita harus tahu beberapa data falsy,atau dianggap false

 Data dianggap Falsey       -     Keterangan
 false                            Boolean false
 0,-0                             Number 0 dan -0 dianggap false
 "",'',``                         Semua string kosong di agnggap false     
 null                             Null dianggap false
 undefined                        undefined diangap false
 NaN                              Not a Number dianggap false

 -Truthy
 Truthy adalah kebalikan dari falsy,dimana data nya dianggal bernilai true
 Sederhana sekali sebenarnya untuk mengetahui sebua data itu adalah truthy, yaiut data yang bukan bernilai falsy

 -Operaot Logika di Non Boolean
 Sebelumnya kita sudah tau bahwa operator logika NAD (&&) dan OR (||) digunakan untuk dua data boolean
 Namun berbeda di JavaScript,kita bisa menggunakan operator logikan AND dan OR untuk tipe data non boolean

 -Operator OR di Non Boolean
 Operator logka OR (||).membaca dari kiri ke Keterangan
 Operato ini akan mengambil nilai pertama yang trutly
 Jika tidak ada satupun yang bernilai truthy,makan yang terahkir yang akan di ambil

 -Operator AND di Non Boolean
 Operator logka OR (||).membaca dari kiri ke Keterangan
 Operato ini akan mengambil nilai pertama yang falsyly
 Jika tidak ada satupun yang bernilai truthy,makan yang terahkir yang akan di ambil

-Break & Continue
Pada switch statement,kita sudah mengenal kata kunci break,yaitu untuk menghentikan case dalam switch
Samda dengan perulangan,break juga digunakan untuk menhentikan seluruh perulangan
Namun berbeda dengan continue,continue digunakan untuk menghentikan perulangan saat ini,lalu melanjutkan ke perulangan selanjutnya

-Label
Label murapakan penanda yang bisa digunakan dengan kata kunci break dan continue
Secara default saat kita melakukan break atau continue,dia akan melakukan terhadp perulangan dimana kode break dan continue itu digunakan
Dengan menggunakan label,kita bisa melakukan break dan continue terhadap perulangan yang kita inginkan,asalkan pada perulangan kita gunakan label
Untuk membuat label kita bisa gunakan nama label lalu diikuti dengan :(titik dua)

-For In
For in merupakan perulangan for yang digunakan untuk mengiterasi seluruh data property di object atau index di array 
Walaupun for in bisa digunakan untuk Array,namun tidak tidak rekomendasikan untuk Array,karena biasanya kita jarang sekali butuh data index untuk Array,kita bisa menggunakan For OF(yang dibahas setelah ini)

-For Of
Jika Fo in digunakan untuk melakukan iterasi property atau index,berbeda dengan for of,ini digunakan untuk melakukan iterasi terhadap isi value dari iterable object,seperti Array, String dan lain-lain
For of tidak bisa digunakan untuk melakukan iterasi data di object,karena object bukanlah iterable

-With statement
With statemng merupakan fitur yang digunakan untuk menurunkan sebuah schope data
Dengan menggunakan with statement,kita bisa mengakses property dalam sebuah data tanpa haru menyebutkan datanya
Withstatement tidak di rekomendasikan

-Function
Function adalah blok kode program yang akan berjalan saat kita panggil
Sebelumnya kita sudah menggunakan function writeln() untuk menampilkan tulisan di html
Untuk membuat function,kita bisa menggunakan kata kunci function.lalu diikuti dengan nama function,kurang() dan diahkir dengan blok kurung
Kita bisa memangil function dengan menggunakan nama function lalu diikuti dengan kurung()
Di bahasa pemrog raman lain,function juga disebut method

-Function Parameter
Kita bisa mengirim informasi ke function yang kita panggil
Untuk melakukan hal tersebut,kita perlu menambahkan parameter atau argument di function yang sudah kita bulat
Parameter ditempatkan di dalam kurung() di deklrasi method
Parameter bisa lebih dari satu,jika lebih dari satu,harus dipisah menggunakan tanda koma

-Function Return value
Secara default,function itu tidak menghasilkan value apapun jika kita ingin,kita bisa membuat sebuah function mengembalikan value
Agar function bisa menghasilkan value,kita bisa menggunakan kata kunci return di dalam functionnya
dan didalam blok function,untuk menghasilkan nilai tersebut,kita harus menggunakan kata kunci return,lalu diikuti dengan data yang ingin kita hasilkan
Function hanya bisa mengembalikan satu data,jika kita ingin mengembalikan beberapa data sekaligus kita bisa menggunakan array sebagai return value nya

-Menhentikan Ekseskusi Dengan Return
Saat kita menggunakan kata kunci return,maka kode seteralah return tersebut tidak akan dieksekusi
kita bisa menggunakan return untuk mengehntikan ekseskusi sebuah function

-Optional Parameter
Secara defualt,parameter di function itu optional
Artinya kita tidak wajib mengisi value nya ketika memangil function
Jika tidak ada value yang kita kirim ke parameter ketika memanggil function,maka secara otomatis parameter tersebut bernilai undefined

-Default Parameter
Sekarang kita tahu bahwa parameter itu optional,artinya kita bisa tidak memberi value terhadap parameter
Parameter atau kita beri default value,artinya jika ketika kita tidak mengirim data ke parameter atau kita mengirim data undefined,maka secara otomatis parameter akan diisi oleh default value 

-Rest Parameter
Rest Parameter adalah fitur dimana kita bisa mengirim data sebanyak-banyak nya pada satu parameter,dan secara otomatis akan di konversi menjadi array
Untuk membuat rest parameter, ada ketentuannya
Rest parameter hanya boleh ada satu di function,tidak boleh lebih dari satu
Rest parameter hanya boleh berda di posisi paling akhir,tidak boleh di depan atau di tengah,kecuali memang cuma ada 1 parameter
Di bahasa prmrograman lain,ada juga yang bilang ini adalah varible argument 

-Function sebagai Value
Function tidak hanya bisa digunakan sebagai kode program yang dieksekusi,tapi bisa sebagai value
Artinya,function bisa disimpam di variable,bisa juga dikirim melalu parameter ke function lainnya

-Anonymous Function
Sebelumnya kita selalu membuat function dengan nama
Kita juga bisa membuat function tanpa nama function atau istilahnya adalah Anonymous function
kita bisa buat Anonymous function dalam sebuah variable atau bisa juga kita buat ketika mengisi parameter
 
-Function dalam Function
Tidak ada batasan dimana kita bisa membuat function
Termasuk jika kita ingin membuat function di dalam sebuah function,kita bisa melakukannya
Function yang terdapat didalam,kita sebut inner function
Inner function hanya bisa diakses di tempat kita membuat function nya,tidak bisa diakses dari luar function nya  

-Scope
Scope merupakan area akses sebuah data
ada dua jenis chope,global scope dan local scope
Setiap kita membuat function,maka kita akan membuat local scope untuk function tersebut
Data di global scope bisa diakses dari local scope,namun data di local scope hanya bisa diakses di local scope tersebut atai do scope local dibawahnya(dalam kasus function dalam function)

-Recursive Function
Recursive Function adalah kemampuan function memanggil function dirinya sendiri
Kadang memang ada banyak problem,yang lebih mudah diselesaikan menggunakan recursive function,seperti contohnya kasus factorial

-Function Generator
Function generator adalah function yang digunakan untuk membuat data generator
Generator adalah data yang bisa di interasi seperti Array
Untuk membuat function generator,kita perlu menggunakan tanda * (bintang) setelah kita function
Dan untuk mengembalikan data di tiap iterasi,kita bisa gunakan kata kunci yield diikuti datanya 

-Arrow Function
 Arrow function adalah alternatif pembuatan function yang lebih sederhana dari function biasanya
 Namun terdapat limitasi dan juga tidak bisa digunakan di semua situasi
 Dinamakan arrow function karena menggunakan tanda => (seperti panah)
 Berikut contoh beberapa kekurangan arrow function
    -Tidak memiliki fitur argumen object
    -Tidak bisa menggunakan functionm generator
    -Tidak bisa mengakses this()
    -Tidak bisa mengakses super
-Closure
Closure adalah kombinasi function dan bundel referensi ke data disekitarnya
Dengan kekmpuan closure,kita bisa membuat sebuah function di local scope dan referensi ke data di sekitar local scope tersebut,keluar scopenya

-Object Method
Pada tipe object,kita sudah membahas tentang property di object
Karena sebenarnya function juga merupakan salah satu tipe data, jadi function pun sebenarnya bisa di tambahkan sebagai property di object
Cara pembuatannya pun sama dengan function sebagai value
function di object kadang disebut juga sebagai Object Method

-Getter dan Setter
Getter dan Setter adalah kemampuan membuat function yang berbeda untuk mengambil data (Getter) dan mengubah data(Setter) pada sebuah property di Object
Dengan menggunakan Getter dan Setter,kita bisa melakukan hal apapun dalam function sebelum sebuah property di akses atau diubah,misal menambahka validasi dan lain-lain 

-Destructuring
Destructuring adalah fitur yang bisa digunakan untuk membongkar value-value di array atau object ke dalam variable-variable
Fitur ini sangat mempermudah kita ketika ingin mengambil data dari array atau object tanpa harus melakukan pengambilan data satu persatu
 ->Destructuring Function Parameter
   Destructuring tidak hanya bisa dilakukan di variable,tapi juga bisa dilakukan di function parameter
   Hal ini membuat kita mudah ketika ingin mengambil nested data dalam array atau object dalam function
 ->Default Value
   Yang paling menarik di Destructuring adalah,kita bisa menambahka default value
   Jadi misal kita melakukan Destructuring terhadap array,ternyata tidak ada datanya,maka kita bisa menambahkan default value
   Begitu juga pada object,jika ternyata propert nya tidak ada,maka kita bisa menambahkan default value 