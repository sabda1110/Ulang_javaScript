JAVASCRIPT Object Oriented Programming

 -Pengenalan OOP
 Object Oriented Programming adalah sudut pandang bahasa pemrograman yang berkonsep 'Objek'
 Ada banyak sudut pandang bahasa pemrograman,namun OOP adalah yang sangat populer saat ini
 Ada beberapa istilah yang perlu dimengerti dalam OOP,yaitu:Object dan Class 

   ->Pengertian Class
   Class adalah blueprint,prototype atau cetakan untuk membuat object
   Class berisikan deklrasi semua properties dan functions yang dimiliki oleh object
   Setiap object selalu dibuat dari class
   Dan sebuah class bisa membuat object tanpa batas  

   ->OOP di javascript
   Javascript sendiri sebenarnya sejak awal dibuat sebagai bahasa prosedural,bukan bahasa pemrogaman berorientasi objek
   Oleh karena,implementasi OOP di JavaScript memang tidak sedetail bahasa pemrogaman lain yang memang dari awal merupakan bahasa pemrogaman OOP seperti Java atau C++

 -Membuat Constructor Function
 sebenarnya kita sudah belajar tipe data object,dengan cara membuat variable dengan tipe data object
 Namun pembuatan object menggunakan tipe data object,akan membuat object yang selalu unik,object dengan karakteristik yang sama berkali-kali,tanpa harus mendeklarasikan object berkali-kali seperti menggunakan tipe data object  
 Sebelum ECMAScript versi 6, pembuatan class,biasanya menggunakan function,Hal ini dikarenakan sebenarnya JavaScript bukanlah bahasa pemrograman yang fokus ke OOP
 Untuk membuat class di JavaScript,kita bisa membuat function
 Function ini kita sebut dengan Constructor Function  
    
    ->Membuat Object dari Constructor Function
    Setelah kita membuat class,jika kita ingin membuat object dari class tersebut,kita bisa menggunakan kata kunci new,lalu diikuti dengan nama Constructor function nya

 -Property di Constructor Function
 Sebenarnya setelah kita membuat object,kita bisa dengan mudah menambahka propert ke dalam object tersebut hanya dengan menggunakan nama variablenya,diikuti tanda titik dan nama property
 Namun jika itu,alhasil Constructor function yang sudah kita buat tidak terlalu berguna,karena property nya hanya ada di object yang kita tambahkan property
 Untuk menambahka property di dalam semua object yang dibuat dari Constructor function,kita bisa menggunakan kata kunci this lalu diikuti dengan nama property nya   

 -Method di construktor function
 Sama seperti pada tipe data object biasanya,kita juga bisa menambahkan method dalam construktor function
 Jika kita tambahkan method di construktor function secara otomatis object yang dibuat akan memeiliki method tersebut

 -Parameter di Constructor Function
  Karena dalam JavaScript,class adalah berbentuk function,jadi secara default,function tersebut bisa memiliki parameter
  construktor function sama seperti function biasanya,bisa memiliki parameter,hal ini membuat ketika kita membuat object,jita bisa mengirim langsung data lewat parameter di construktor function tersebut

 -Constructor Inheritance 
 Dalam Constructor kita biasanya membuat property baik itu berisi value ataupun function
 Di dalam constructor,kita bisa memanggil constructor lain,dengan begitu kita bisa mewarisi semua property yang dibuat di constructor lain tersebut
 Untuk memangil constructor lain,kita bisa menggunakan NamaConstructor.call(this, parameter)

 -Prototype
 JavaScript sebelumnya dikenal dengan pemrograman berbasi prototype
 Memang agak sedikit membingungkan,dan tidak dipungkiri,banyak sekali yang bingung dengan konsep prototype di JavaScript
 Pada chapter ini,kita akan bahas tentang konsep prototype 
  ->Prototype Inheritance
  Saat kita membuat object dari constructor function,object tersebut disebut instance,semua prototype(baik itu value atau method),akan berada di dalam instance object nya
  Setiap kita membuat sebuah constructor function,maka secara otomatis akan dibuatkan prototype nya,misal ketika kita membuat constructor function Person,maka akan ada person.prototype
  Saat kita membuat object instance,secara otomatis object tersebut adalah turunan dari Constructor.prototype nya
  Untuk mengakses prototype milih sebua instance,kita bisa menggunakan _proto_

  ->Menambah Property ke Prototype
  Property mirip object,diaman kita bisa menambahkan baik itu value ataupun method
  Saat kita menambah sebuah property ke prototype,secara otomatis,semua object instance yang turunan dari prototype tersebut akan memiliki property tersebut 

  ->Cara Kerja Prototpe Inheritance
  Bagaimana bisa property di prototype di object instance,pertama akan di cek apakah di object tersebut terdapat property tersebut atau tidak,jika tidak,maka akan di cek di _proto_(prototpe) nya,jika masih tidak ada,akan di cek lagi di _proto_ (prototype) yang lebih tinggi,begitu seterusnya sampai berahkir di Object Prototype